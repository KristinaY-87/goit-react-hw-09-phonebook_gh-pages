{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","component/ContactList/ContactList.module.css","component/ContactForm/ContactForm.module.css","component/Filter/Filter.module.css","component/Section/Section.module.css","redux/operations.js","redux/contacts-selectors.js","component/ContactList/ContactList.js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/Section/Section.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","contact","dispatch","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactList","useDispatch","useSelector","className","styles","title","list","map","number","item","text","btn","type","onClick","operations","onDeleteContacts","initialFormState","ContactForm","useState","formData","setFormData","handleChange","e","currentTarget","prevState","reset","form","onSubmit","preventDefault","find","alert","label","onChange","input","pattern","required","Filter","useCallback","contactsActions","Section","children","section","ContactsView","isLoadingContacts","useEffect"],"mappings":"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","file":"static/js/contacts-view.f973842d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3DgQu\",\"list\":\"ContactList_list__zxymi\",\"item\":\"ContactList_item__2RMfk\",\"text\":\"ContactList_text__1pNxQ\",\"btn\":\"ContactList_btn__g02yK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3xZUB\",\"label\":\"ContactForm_label__31Pzp\",\"input\":\"ContactForm_input__2vZm8\",\"btn\":\"ContactForm_btn__2yByk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2gOao\",\"input\":\"Filter_input__2ODYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__RXJSR\",\"title\":\"Section_title__3Ci0w\"};","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\n// ----async-----\n// const fetchContacts = () => async dispatch => {\n//     dispatch(fetchContactsRequest());\n\n//     try {\n//         const { data } = await axios.get('/contacts');\n//         dispatch(fetchContactsSuccess(data));\n//     } catch (error) {\n//         dispatch(fetchContactsError(error));\n//     }\n// }\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error.message)));\n};\n\nconst addContact = contact => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n\n// export const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n// return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from '../../redux/operations';\nimport styles from './ContactList.module.css';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n  const onDeleteContacts = id => dispatch(operations.deleteContact(id));\n\n  return (\n    <>\n      <h2 className={styles.title}>Contacts</h2>\n      <ul className={styles.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={styles.item} key={id}>\n            <span className={styles.text}>\n              {name}: {number}\n            </span>\n\n            <button\n              className={styles.btn}\n              type=\"button\"\n              onClick={() => onDeleteContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from '../../redux/operations';\nimport { getAllContacts } from '../../redux/contacts-selectors';\nimport styles from './ContactForm.module.css';\n\nconst initialFormState = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm() {\n  const [formData, setFormData] = useState(initialFormState);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getAllContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setFormData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = formData;\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : contacts.find(contact => contact.number === number)\n      ? alert(`${number} is already in contacts`)\n      : dispatch(operations.addContact(formData));\n\n    reset();\n  };\n\n  const reset = () => {\n    setFormData(initialFormState);\n  };\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            value={formData.name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            className={styles.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            value={formData.number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            className={styles.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport styles from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = useCallback(\n    e => dispatch(contactsActions.changeFilter(e.currentTarget.value)),\n    [dispatch],\n  );\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport ContactList from '../component/ContactList';\nimport ContactForm from '../component/ContactForm';\nimport Filter from '../component/Filter';\nimport Section from '../component/Section';\nimport operations from '../redux/operations';\nimport { getLoading } from '../redux/contacts-selectors';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(getLoading);\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        {isLoadingContacts && <h1>download...</h1>}\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   isLoadingContacts: getLoading(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   fetchContacts: () => dispatch(operations.fetchContacts()),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\n"],"sourceRoot":""}