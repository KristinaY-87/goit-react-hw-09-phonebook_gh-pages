{"version":3,"sources":["redux/contacts-actions.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","component/UserMenu/UserMenu.module.css","component/Navigation.js","component/UserMenu/default-avatar.png","component/UserMenu/UserMenu.js","component/AuthNav.js","component/AppBar.js","component/PrivateRoute.js","component/PublicRoute.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","module","exports","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","style","activeStyle","UserMenu","useDispatch","onLogout","useCallback","authOperations","className","s","container","src","defaultAvatar","alt","width","avatar","btn","type","onClick","AuthNav","header","justifyContent","alignItems","borderBottom","AppBar","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","height","path","component","items","filter","id","loading","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.533d70f4.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1KkSm\",\"avatar\":\"UserMenu_avatar__2Lcpy\",\"name\":\"UserMenu_name__26eR7\",\"btn\":\"UserMenu_btn__2izf0\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\nimport s from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const onLogout = useCallback(\n    () => dispatch(authOperations.logOut()),\n    [dispatch],\n  );\n\n  return (\n    <div className={s.container}>\n      <img src={defaultAvatar} alt=\"\" width=\"32\" className={s.avatar} />\n      <span className={s.name}>Welcome, {name}!</span>\n      <button className={s.btn} type=\"button\" onClick={onLogout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Sign up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Log in\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","// import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from '../component/UserMenu/UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  children,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  children,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import { Suspense, lazy, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport AppBar from './component/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './component/PrivateRoute';\nimport PublicRoute from './component/PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /*webpackChunkName: \"home-view\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /*webpackChunkName: \"register-view\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /*webpackChunkName: \"login-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /*webpackChunkName: \"contacts-view\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // console.log('useEffect');\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n      <Suspense\n        fallback={<Loader type=\"Puff\" color=\"#00BFFF\" height={80} width={80} />}\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            component={RegisterView}\n            redirectTo=\"/\"\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            component={LoginView}\n            redirectTo=\"/contacts\"\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            component={ContactsView}\n            redirectTo=\"/login\"\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","// import { combineReducers } from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\nimport { authReducer } from './auth';\n\n// console.log(process.env.NODE_ENV);\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}